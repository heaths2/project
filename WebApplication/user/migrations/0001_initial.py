# Generated by Django 2.1.15 on 2020-04-27 04:27

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(db_column='email', max_length=64, unique=True, validators=[django.core.validators.RegexValidator(message='이메일 주소를 입력하시오.', regex='@4anytech.co.kr$')], verbose_name='이메일')),
                ('username', models.CharField(db_column='username', max_length=32, unique=True, validators=[django.core.validators.RegexValidator(message='이름을 입력하시오.', regex='^[가-힣]+$')], verbose_name='이름')),
                ('phone', models.CharField(db_column='phone', max_length=13, unique=True, validators=[django.core.validators.RegexValidator(message='휴대전화 번호를 입력하시오.', regex='^[0-9]{2,3}-[0-9]{3,4}-[0-9]{4}$')], verbose_name='연락처')),
                ('date_of_birth', models.DateField(db_column='date_of_birth', default='1999-01-01', verbose_name='생년월일')),
                ('gender', models.SmallIntegerField(choices=[(0, '선택하지 않음'), (1, '남성'), (2, '여성')], default=0)),
                ('date_joined', models.DateTimeField(auto_now_add=True, db_column='date_joined', verbose_name='가입일')),
                ('last_login', models.DateTimeField(auto_now=True, db_column='last_login', verbose_name='마지막 로그인')),
                ('is_active', models.BooleanField(default=False, verbose_name='활성화')),
                ('is_admin', models.BooleanField(default=False, verbose_name='관리자')),
                ('is_staff', models.BooleanField(default=False, verbose_name='직원')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='슈퍼유저')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자',
                'db_table': 'g_account_custom_user',
            },
        ),
    ]
